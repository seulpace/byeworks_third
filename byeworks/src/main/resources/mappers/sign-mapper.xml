<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
				 
<mapper namespace="signMapper">


	<resultMap type="Department" id="departmentResultSet">
		<id property="departmentNo" column="DEPARTMENT_NO" />
		<result property="departmentName" column="DEPARTMENT_NAME" />
	</resultMap>
	
	<resultMap type="Member" id="memberResultSet">
		<!-- property : vo클래스의 필드명 / column : DB조회된 컬럼명 -->
		<id property="memberNo" column="member_no" />
		<result property="memberId" column="member_id" />
		<result property="memberName" column="member_name" />
		<result property="memberPwd" column="member_pwd" />
		<result property="position" column="position" />
		<result property="department" column="department" />
		<result property="phone" column="phone" />
		<result property="extension" column="extension" />
		<result property="email" column="email" />
		<result property="address" column="address" />
		<result property="birth" column="birth" />
		<result property="enrollday" column="enrollday" />
		<result property="memberStatus" column="member_status" />
		<result property="retireday" column="retireday" />
		<result property="profileModify" column="profile_modify" />
		<result property="empNo" column="empno" />
	</resultMap>
	
	<resultMap type="SignDto" id="signDtoResultSet">
		<id property="signNo" column="SIGN_NO" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="docuType" column="D_TYPE" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="signStatus" column="SIGN_STATUS" />
		<result property="flag" column="FLAG" />
		<result property="title" column="TITLE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="signLine" column="SIGNLINE"/>
	</resultMap>
	
	<resultMap type="SignAndAnnualSign" id="SAANResultSet">
		<id property="signNo" column="SIGN_NO" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="docuType" column="D_TYPE" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="signStatus" column="SIGN_STATUS" />
		<result property="flag" column="FLAG" />
		<result property="title" column="TITLE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="signUse" column="ANNUAL_USE"/>
		<result property="annualPeriod" column="ANNUAL_PERIOD"/>
		<result property="annualStartDay" column="ANNUAL_STARTDAY"/>
		<result property="annualEndDay" column="ANNUAL_ENDDAY"/>
		<result property="annualContent" column="ANNUAL_CONTENT"/>
		<result property="annualType" column="ANNUAL_TYPE"/>
		<result property="department" column="DEPARTMENT_NAME"/>
	</resultMap>
	
	<resultMap type="SignAndAppointment" id="SAAPResultSet">
		<id property="signNo" column="SIGN_NO" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="docuType" column="D_TYPE" />
		<result property="signStatus" column="SIGN_STATUS" />
		<result property="flag" column="FLAG" />
		<result property="title" column="TITLE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="department" column="DEPARTMENT_NAME"/>
		<result property="positionBefore" column="POSITION_BEFORE"/>
		<result property="positionAfter" column="POSITION_AFTER"/>
		<result property="depBefore" column="DEP_BEFORE"/>
		<result property="depAfter" column="DEP_AFTER"/>
		<result property="appointmentLev" column="APPOINTMENT_LEV"/>
		<result property="appointmentMem" column="APPOINT_MEM"/>
		<result property="appointmentMemName" column="APPOINT_MEMNAME"/>
		<result property="appointmentDate" column="APPOINTMENT_DATE"/>
		
	</resultMap>
	
	<resultMap type="SignAndQuit" id="SAQResultSet">
		<id property="signNo" column="SIGN_NO" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="docuType" column="D_TYPE" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="signStatus" column="SIGN_STATUS" />
		<result property="flag" column="FLAG" />
		<result property="title" column="TITLE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="quitDate" column="QUIT_DATE"/>
		<result property="reason" column="REASON"/>
		<result property="department" column="DEPARTMENT_NAME"/>
	</resultMap>
	
	<resultMap type="SignLineDto" id="SignLineResultSet">
		<id property="signNo" column="SIGN_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="approvalDate" column="APPROVAL_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="memberOrder" column="MEMBER_ORDER"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="position" column="POSITION_NAME"/>
	</resultMap>
	
	<resultMap type="SignReferDto" id="SignReferResultSet">
		<id property="signNo" column="SIGN_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="status" column="STATUS"/>
		<result property="checkDate" column="CHECK_DATE"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="position" column="POSITION_NAME"/>		
	</resultMap>
	
	<resultMap type="SignAttachment" id="SignAttachmentResultSet">
		<id property="fileNo" column="FILE_NO"/>
		<result property="oaName" column="OA_NAME"/>
		<result property="maName" column="MA_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="signNo" column="SIGN_NO"/>
	</resultMap>
	
	<resultMap type="UpdateQuitDto" id="updateQuitResultSet">
		<id property="signNo" column="SIGN_NO"/>
		<result property="quitDate" column="QUITDATE"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>


	<resultMap type="AppointmentDto" id="appointmentListSet">
		<result property="signNo" column="sign_no"/>
		<result property="positionAfter" column="position_no"/>
		<result property="positionBefore" column="position_no"/>
		<result property="positionName" column="position_name"/>
		<result property="deptAfter" column="department_no"/>
		<result property="deptBefore" column="department_no"/>
		<result property="departmentName" column="department_name"/>
		<result property="appointmentName" column="member_name"/>
		<result property="appointmentLev" column="appointment_lev"/>
		<result property="appEmpno" column="empNo"/>
	</resultMap> 
	
	<resultMap type="Member" id="memberList">
		<!-- property : vo클래스의 필드명 / column : DB조회된 컬럼명 -->
		<id property="memberNo" column="member_no" />
		<result property="memberId" column="member_id" />
		<result property="memberName" column="member_name" />
		<result property="position" column="position_name" />
		<result property="department" column="department_name" />
		<result property="enrollday" column="enrollday" />
		<result property="empNo" column="empno" />
	</resultMap>
	
	<select id="selectDepartmentList" resultMap="departmentResultSet">
	
		SELECT DEPARTMENT_NO, DEPARTMENT_NAME FROM TB_DEPARTMENT
	</select>
	
	<select id="selectEmpList" parameterType="_int" resultMap="memberResultSet">
	
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, POSITION, DEPARTMENT, EMPNO FROM TB_MEMBER WHERE DEPARTMENT = #{departmentNo} AND MEMBER_STATUS ='Y' ORDER BY POSITION
	</select>
	
	<insert id="insertSignA" parameterType="SignAndAnnualSign">
	
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	
	</insert>
	
	<insert id="insertAnnualSign" parameterType="SignAndAnnualSign">
		INSERT INTO TB_ANNUAL_SIGN VALUES
		(SEQ_SNO.CURRVAL, SYSDATE, #{annualPeriod}, #{annualStartDay}, #{annualEndDay}, #{annualContent}, #{annualType})
	
	</insert>
	
	<insert id="insertSignLine" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNLINE VALUES
			(#{item.signLineMemberNo}, SEQ_SNO.CURRVAL, NULL, DEFAULT, #{item.memberOrder})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertSignRefer" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNREFER VALUES
			(SEQ_SNO.CURRVAL, #{item.referMemberNo}, DEFAULT, NULL )
		</foreach>
		SELECT * FROM DUAL
	
	</insert>
	
	<insert id="insertSignAttachment" parameterType="SignAttachment">
		INSERT INTO TB_SIGN_ATTACHMENT VALUES
		(SEQ_FNO.NEXTVAL, #{oaName}, #{maName}, NULL, SEQ_SNO.CURRVAL)
	
	</insert>
	
	<insert id="insertSignQ" parameterType="SignAndQuit">
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	</insert>
	
	<insert id="insertQuit" parameterType="SignAndQuit">
		INSERT INTO TB_QUIT VALUES
		(SEQ_SNO.CURRVAL, #{enrollDate}, #{quitDate}, #{reason})
	
	</insert>
	
	<insert id="insertSignLineList" parameterType="list">
		INSERT ALL 
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNLINE VALUES
			(#{item.signLineMemberNo}, SEQ_SNO.CURRVAL, NULL, DEFAULT, #{item.memberOrder})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertReferList" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNREFER VALUES
			(SEQ_SNO.CURRVAL, #{item.referMemberNo}, DEFAULT, NULL)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertAttachmentList" parameterType='SignAttachment'>
		INSERT INTO TB_SIGN_ATTACHMENT VALUES
		(SEQ_FNO.NEXTVAL, #{oaName}, #{maName}, NULL, SEQ_SNO.CURRVAL)
	</insert>
	
	<insert id="insertSignAp" parameterType="SignAndAppointment">
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	</insert>
	
	<insert id="insertAppointment" parameterType="SignAndAppointment">
		INSERT INTO TB_APPOINTMENT VALUES
		(SEQ_SNO.CURRVAL, #{positionBefore}, #{positionAfter}, #{depBefore}, #{depAfter}, #{appointmentLev}, #{appointmentMem}, #{appointmentDate})
	</insert>
	
	<select id="selectSignList" parameterType="hashmap" resultMap="signDtoResultSet">

	<!-- 전체 -->
	<if test="type == 1">
		SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG ='Y' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 대기 -->
	<if test="type == 2">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG ='N' AND SIGN_STATUS = 'N' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGN_NO DESC
	</if>
	<!-- 진행 -->
	<if test="type == 3">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG ='Y' AND SIGN_STATUS = 'O' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 완료 -->
	<if test="type == 4">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG = 'Y' AND SIGN_STATUS = 'C'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 반려 -->
	<if test="type == 5">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG = 'Y' AND SIGN_STATUS = 'R'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 회수 -->
	<if test="type == 6">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
		AND FLAG = 'N' AND SIGN_STATUS = 'D'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 참조 -->
	<if test ="type == 7">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME,
	LISTAGG(M1.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP(ORDER BY SL.MEMBER_ORDER)AS SIGNLINE
	FROM TB_SIGN S
	JOIN
	TB_MEMBER M ON(M.MEMBER_NO = S.MEMBER_NO)
	JOIN TB_SIGNLINE SL
	ON(SL.SIGN_NO = S.SIGN_NO)
	JOIN TB_MEMBER M1 ON(M1.MEMBER_NO =
	SL.MEMBER_NO)
	JOIN TB_SIGNREFER SF ON(SF.SIGN_NO = S.SIGN_NO)
	WHERE
	SF.MEMBER_NO = #{memberNo} AND FLAG = 'Y'
	GROUP BY S.SIGN_NO, SIGNUP_DATE,
	D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME
	ORDER BY
	SIGNUP_DATE DESC
	
	</if>
	<!-- 결재할  -->
	<if test="type == 8">
	    SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME,
	LISTAGG(ML.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','대기','O','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SL.MEMBER_ORDER)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON(M.MEMBER_NO=S.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON(SL.SIGN_NO = S.SIGN_NO)
	JOIN TB_MEMBER ML ON(ML.MEMBER_NO=SL.MEMBER_NO)
	JOIN TB_SIGNLINE SL1 ON(SL1.SIGN_NO =S.SIGN_NO)
	WHERE SL1.MEMBER_NO = #{memberNo} AND SL1.STATUS = 'O' AND FLAG ='Y' AND S.SIGN_STATUS = 'O'
	GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,S.MEMBER_NO, M.MEMBER_NAME
	ORDER BY SIGNUP_DATE DESC
	</if>
	
	</select>
	
	<select id="selectSignAnnual" parameterType="_int" resultMap="SAANResultSet">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	MEMBER_NO, MEMBER_NAME,
	ANNUAL_USE, ANNUAL_PERIOD, ANNUAL_STARTDAY, ANNUAL_ENDDAY, ANNUAL_CONTENT,
	ANNUAL_TYPE,
	DEPARTMENT_NAME
	FROM TB_SIGN S
	JOIN TB_ANNUAL_SIGN AN ON (S.SIGN_NO = AN.SIGN_NO)
	JOIN TB_MEMBER M USING(MEMBER_NO)
	JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = M.DEPARTMENT)
	WHERE S.SIGN_NO = #{sno}
	</select>
	
	<select id="selectSignQuit" parameterType="_int" resultMap="SAQResultSet">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	MEMBER_NO, MEMBER_NAME,
	ENROLL_DATE, QUIT_DATE, REASON,
	DEPARTMENT_NAME
	FROM TB_SIGN S
	JOIN TB_QUIT Q ON (S.SIGN_NO = Q.SIGN_NO)
	JOIN TB_MEMBER M USING(MEMBER_NO)
	JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = M.DEPARTMENT)
	WHERE S.SIGN_NO = #{sno}
	</select>	
	
	<select id="selectSignAppointment" parameterType="_int" resultMap="SAAPResultSet">
	SELECT S.SIGN_NO, S.SIGNUP_DATE, S.D_TYPE, S.SIGN_STATUS, S.FLAG,
	S.TITLE, S.MEMBER_NO, M.MEMBER_NAME, D.DEPARTMENT_NAME,
	P.POSITION_NAME POSITION_BEFORE, P1.POSITION_NAME POSITION_AFTER, D1.DEPARTMENT_NAME
	DEP_BEFORE, D2.DEPARTMENT_NAME DEP_AFTER, APPOINTMENT_LEV, APPOINT_MEM,
	M1.MEMBER_NAME APPOINT_MEMNAME, APPOINTMENT_DATE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (M.MEMBER_NO = S.MEMBER_NO)
	JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = M.DEPARTMENT)
	JOIN TB_APPOINTMENT AP ON(AP.SIGN_NO = S.SIGN_NO)
	JOIN TB_MEMBER M1 ON (AP.APPOINT_MEM = M1.MEMBER_NO)
	JOIN TB_POSITION P ON(P.POSITION_NO = AP.POSITION_BEFORE)
	JOIN TB_POSITION P1 ON(P1.POSITION_NO = AP.POSITION_AFTER)
	JOIN TB_DEPARTMENT D1 ON(D1.DEPARTMENT_NO = AP.DEP_BEFORE)
	JOIN TB_DEPARTMENT D2 ON(D2.DEPARTMENT_NO = AP.DEP_AFTER)
	WHERE S.SIGN_NO = #{sno}
	</select>
	

	<select id="selectSignLine" parameterType="_int" resultMap="SignLineResultSet">
	SELECT MEMBER_NO, MEMBER_NAME, SIGN_NO, APPROVAL_DATE, STATUS,
	MEMBER_ORDER, POSITION_NAME
	FROM TB_SIGNLINE
	JOIN TB_MEMBER USING(MEMBER_NO)
	JOIN TB_POSITION ON(POSITION = POSITION_NO)
	WHERE SIGN_NO = #{sno}
	ORDER BY MEMBER_ORDER
	</select>
	
	<select id="selectSignRefer" parameterType="_int" resultMap="SignReferResultSet">
	SELECT MEMBER_NO, MEMBER_NAME, SIGN_NO, STATUS, CHECK_DATE,
	POSITION_NAME
	FROM TB_SIGNREFER
	JOIN TB_MEMBER USING(MEMBER_NO)
	JOIN TB_POSITION ON(POSITION = POSITION_NO)
	WHERE SIGN_NO = #{sno}
	ORDER BY POSITION DESC
	</select>
	
	<select id="selectAttachment" parameterType="_int" resultMap="SignAttachmentResultSet">
	SELECT FILE_NO, OA_NAME, MA_NAME, FILE_PATH, SIGN_NO
	FROM TB_SIGN_ATTACHMENT
	WHERE SIGN_NO = #{sno}
	
	</select>
	
	<update id="signUp" parameterType="_int">
	UPDATE TB_SIGN 
	SET FLAG = 'Y',
		SIGN_STATUS = 'O', SIGNUP_DATE = SYSDATE
	WHERE SIGN_NO = #{sno}
	
	</update>
	
	<update id="signLineUp" parameterType="_int">
	UPDATE TB_SIGNLINE
	SET STATUS = 'O'
	WHERE SIGN_NO = #{sno}
	</update>
	
	<update id="updateSignQ" parameterType="SignAndQuit">
	UPDATE TB_SIGN
	SET TITLE = #{title}
	WHERE SIGN_NO = #{signNo}	
	</update>
	
	<update id="updateSignQuit" parameterType="SignAndQuit">
	UPDATE TB_QUIT
	SET ENROLL_DATE = #{enrollDate}, QUIT_DATE = #{quitDate}, REASON = #{reason}
	WHERE SIGN_NO = #{signNo}
	</update>
	
	<delete id="deleteSignLine" parameterType="_int">
	DELETE FROM TB_SIGNLINE
	WHERE SIGN_NO = #{signNo}
	
	</delete>
	
	<delete id="deleteSignRefer" parameterType="_int">
	DELETE FROM TB_SIGNREFER
	WHERE SIGN_NO = #{signNo}
	</delete>
	
	<delete id="deleteSignAttachment" parameterType="_int">
	DELETE FROM TB_SIGN_ATTACHMENT
	WHERE SIGN_NO = #{signNo}
	</delete>
	
	<insert id="updateSignLine" parameterType="list">
	INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNLINE VALUES
			(#{item.signLineMemberNo}, #{item.signNo}, NULL, DEFAULT, #{item.memberOrder})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="updateSignRefer" parameterType="list">
	INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNREFER VALUES
			(#{item.signNo}, #{item.referMemberNo}, DEFAULT, NULL )
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="updateAttachmentList" parameterType="SignAttachment">
	INSERT INTO TB_SIGN_ATTACHMENT VALUES
		(#{fileNo}, #{oaName}, #{maName}, NULL, #{signNo})
	</insert>
	
	<update id="updateSignAN" parameterType="SignAndAnnualSign">
	UPDATE TB_SIGN
	SET TITLE = #{title}
	WHERE SIGN_NO = #{signNo}
	
	</update>
	
	
	<update id="updateSignAnnual" parameterType="SignAndAnnualSign">
	UPDATE TB_ANNUAL_SIGN
	SET ANNUAL_PERIOD = #{annualPeriod},
	 	ANNUAL_STARTDAY = #{annualStartDay}, ANNUAL_ENDDAY = #{annualEndDay},
	 	ANNUAL_CONTENT = #{annualContent}, ANNUAL_TYPE = #{annualType}
	WHERE SIGN_NO = #{signNo} 
	
	</update>
	
	<update id="updateSignAP" parameterType="SignAndAppointment">
	UPDATE TB_SIGN
	SET TITLE = #{title}
	WHERE SIGN_NO = #{signNo}
	
	</update>
	
	<update id="updateSignAppointment" parameterType="SignAndAppointment">
	UPDATE TB_APPOINTMENT
	SET POSITION_BEFORE = #{positionBefore}, POSITION_AFTER = #{positionAfter},
		DEP_BEFORE = #{depBefore}, DEP_AFTER = #{depAfter},
		APPOINTMENT_LEV = #{appointmentLev}, APPOINT_MEM = #{appointmentMem},
		APPOINTMENT_DATE = #{appointmentDate}
	WHERE SIGN_NO = #{signNo}
	</update>
	
	<update id="signCancel" parameterType="_int">
	UPDATE TB_SIGN
	SET SIGN_STATUS = 'D', FLAG = 'N'
	WHERE SIGN_NO = #{sno}
	</update>
	
	<update id="FinalConfirm" parameterType="_int">
	UPDATE TB_SIGN
	SET SIGN_STATUS = 'C'
	WHERE SIGN_NO = #{sno}
	</update>
	
	<update id="signConfirm" parameterType="hashmap">
	UPDATE TB_SIGNLINE
	SET STATUS = 'C', APPROVAL_DATE = SYSDATE
	WHERE SIGN_NO = #{sno} AND MEMBER_NO = #{mno}
	</update>
	
	<update id="signReturn" parameterType="hashmap">
	UPDATE TB_SIGNLINE
	SET STATUS = 'R'
	WHERE SIGN_NO = #{sno} AND MEMBER_NO = #{mno}
	</update>
	
	<update id="totalReturn" parameterType="_int">
	UPDATE TB_SIGN
	SET SIGN_STATUS = 'R'
	WHERE SIGN_NO = #{sno}
	
	</update>
	
	<update id="finalConfirm" parameterType="_int">
	UPDATE TB_SIGN
	SET SIGN_STATUS = 'C'
	WHERE SIGN_NO = #{sno}
	</update>
	
	<select id="orderCheck" parameterType="hashmap" resultType="_int">
	SELECT MEMBER_ORDER 
	FROM TB_SIGNLINE
	WHERE SIGN_NO = #{sno} AND MEMBER_NO = #{mno}
	</select>
	
	<update id="checkRefer" parameterType="hashmap">
	UPDATE TB_SIGNREFER
	SET STATUS = 'C', CHECK_DATE = SYSDATE
	WHERE SIGN_NO = #{sno} AND MEMBER_NO = #{mno}
	</update>
	
	<select id="checkDocType" parameterType="_int" resultType="string">
	SELECT D_TYPE
	FROM TB_SIGN
	WHERE SIGN_NO = #{sno}
	</select>
	
	<select id="getAnnualPeriod" parameterType="_int" resultType="_double">
	SELECT ANNUAL_PERIOD
	FROM TB_ANNUAL_SIGN
	WHERE SIGN_NO = #{sno}
	</select>
	
	<update id="changeAnnualRemain" parameterType="hashmap">
	UPDATE TB_ANNUAL
	SET ANNUAL_REMAIN = ANNUAL_REMAIN - ${period}
	WHERE MEMBER_NO = #{mno}
	
	</update>
	
	<select id="selectQuitMember" parameterType="string" resultMap="updateQuitResultSet">
	SELECT MEMBER_NO, TO_CHAR(QUIT_DATE,'YY/MM/DD') QUITDATE, Q.SIGN_NO
	FROM TB_QUIT Q
	JOIN TB_SIGN S ON (S.SIGN_NO = Q.SIGN_NO)
	WHERE QUIT_DATE = #{day}
	</select>
	
	<update id="updateMemberStatus" parameterType="arraylist">
	UPDATE TB_MEMBER
	SET MEMBER_STATUS= 'N'
	where member_no in
	<foreach collection="memberlist" item="item" open="(" close=")">
		#{item}
	</foreach>

	</update>


	<select id="selectAppointmentList" parameterType="_int" resultMap="appointmentListSet">
	
		select empno, member_name, position_name, department_name, 
                case when appointment_lev = '1' then '승진'
                    when appointment_lev = '2' then '부서이동' 
                    when appointment_lev = '3' then '부서이동과 승진'
                end appointment_lev
        from tb_appointment a
        join tb_member m on (m.member_no = a.appoint_mem)
        join tb_department d on (m.department = d.department_no)
        join tb_position p on (m.position = p.position_no)
        join tb_sign s on (s.sign_no = a.sign_no)
        where d_type='A'
        and department_no in 
        	<foreach item="i" index="index" collection="list" open="(" separator="," close=")">
        		#{i}
        	</foreach>
	</select>
	<select id="appointmentList" parameterType="_int" resultMap="memberList">
		select member_name, empno, enrollday, department_name, position_name
        from tb_member m
        join tb_department d on(m.department = d.department_no)
        join tb_position p on(m.position = p.position_no)
        where empno=#{appEmpno}
	</select>

</mapper>				 