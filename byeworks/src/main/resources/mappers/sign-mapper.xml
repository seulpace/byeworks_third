<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
				 
<mapper namespace="signMapper">


	<resultMap type="Department" id="departmentResultSet">
		<id property="departmentNo" column="DEPARTMENT_NO" />
		<result property="departmentName" column="DEPARTMENT_NAME" />
	</resultMap>
	
	<resultMap type="Member" id="memberResultSet">
		<!-- property : vo클래스의 필드명 / column : DB조회된 컬럼명 -->
		<id property="memberNo" column="member_no" />
		<result property="memberId" column="member_id" />
		<result property="memberName" column="member_name" />
		<result property="memberPwd" column="member_pwd" />
		<result property="position" column="position" />
		<result property="department" column="department" />
		<result property="phone" column="phone" />
		<result property="extension" column="extension" />
		<result property="email" column="email" />
		<result property="address" column="address" />
		<result property="birth" column="birth" />
		<result property="enrollday" column="enrollday" />
		<result property="memberStatus" column="member_status" />
		<result property="retireday" column="retireday" />
		<result property="profileModify" column="profile_modify" />
		<result property="empNo" column="empno" />
	</resultMap>
	
	<resultMap type="SignDto" id="signDtoResultSet">
		<id property="signNo" column="SIGN_NO" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="docuType" column="D_TYPE" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="signStatus" column="SIGN_STATUS" />
		<result property="flag" column="FLAG" />
		<result property="title" column="TITLE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="signLine" column="SIGNLINE"/>
	</resultMap>
	
	

	
	
	<select id="selectDepartmentList" resultMap="departmentResultSet">
	
		SELECT DEPARTMENT_NO, DEPARTMENT_NAME FROM TB_DEPARTMENT
	</select>
	
	<select id="selectEmpList" parameterType="_int" resultMap="memberResultSet">
	
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, POSITION, DEPARTMENT, EMPNO FROM TB_MEMBER WHERE DEPARTMENT = #{departmentNo} AND MEMBER_STATUS ='Y' ORDER BY POSITION
	</select>
	
	<insert id="insertSignA" parameterType="SignAndAnnualSign">
	
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	
	</insert>
	
	<insert id="insertAnnualSign" parameterType="SignAndAnnualSign">
		INSERT INTO TB_ANNUAL_SIGN VALUES
		(SEQ_SNO.CURRVAL, SYSDATE, #{annualPeriod}, #{annualStartDay}, #{annualEndDay}, #{annualContent}, #{annualType})
	
	</insert>
	
	<insert id="insertSignLine" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNLINE VALUES
			(#{item.signLineMemberNo}, SEQ_SNO.CURRVAL, NULL, DEFAULT, #{item.memberOrder})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertSignRefer" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNREFER VALUES
			(SEQ_SNO.CURRVAL, #{item.referMemberNo}, DEFAULT, NULL )
		</foreach>
		SELECT * FROM DUAL
	
	</insert>
	
	<insert id="insertSignAttachment" parameterType="SignAttachment">
		INSERT INTO TB_SIGN_ATTACHMENT VALUES
		(SEQ_FNO.NEXTVAL, #{oaName}, #{maName}, NULL, SEQ_SNO.CURRVAL)
	
	</insert>
	
	<insert id="insertSignQ" parameterType="SignAndQuit">
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	</insert>
	
	<insert id="insertQuit" parameterType="SignAndQuit">
		INSERT INTO TB_QUIT VALUES
		(SEQ_SNO.CURRVAL, #{enrollDate}, #{quitDate}, #{reason})
	
	</insert>
	
	<insert id="insertSignLineList" parameterType="list">
		INSERT ALL 
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNLINE VALUES
			(#{item.signLineMemberNo}, SEQ_SNO.CURRVAL, NULL, DEFAULT, #{item.memberOrder})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertReferList" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" separator=" ">
			INTO TB_SIGNREFER VALUES
			(SEQ_SNO.CURRVAL, #{item.referMemberNo}, DEFAULT, NULL)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertAttachmentList" parameterType='SignAttachment'>
		INSERT INTO TB_SIGN_ATTACHMENT VALUES
		(SEQ_FNO.NEXTVAL, #{oaName}, #{maName}, NULL, SEQ_SNO.CURRVAL)
	</insert>
	
	<insert id="insertSignAp" parameterType="SignAndAppointment">
		INSERT INTO TB_SIGN VALUES
		(SEQ_SNO.NEXTVAL, SYSDATE, #{docuType}, DEFAULT, DEFAULT, #{title}, #{memberNo})
	</insert>
	
	<insert id="insertAppointment" parameterType="SignAndAppointment">
		INSERT INTO TB_APPOINTMENT VALUES
		(SEQ_SNO.CURRVAL, #{positionBefore}, #{positionAfter}, #{depBefore}, #{depAfter}, #{appointmentLev}, #{appointmentMem}, #{appointmentDate})
	</insert>
	
	<select id="selectSignList" parameterType="hashmap" resultMap="signDtoResultSet">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
	S.MEMBER_NO, M.MEMBER_NAME ,
	LISTAGG(SLM.MEMBER_NAME||'('||DECODE(SL.STATUS,'C','완료','N','진행','R','반려')||')',',')
	WITHIN GROUP (ORDER BY SLM.POSITION DESC, SIGNUP_DATE)AS SIGNLINE
	FROM TB_SIGN S
	JOIN TB_MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
	JOIN TB_SIGNLINE SL ON (S.SIGN_NO = SL.SIGN_NO)
	JOIN TB_MEMBER SLM ON (SL.MEMBER_NO = SLM.MEMBER_NO)
	WHERE S.MEMBER_NO = #{ memberNo }
	
	
	<!-- 전체 -->
	<if test="type == 1">
		AND FLAG ='Y' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 대기 -->
	<if test="type == 2">
		AND FLAG ='N' AND SIGN_STATUS = 'N' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGN_NO DESC
	</if>
	<!-- 진행 -->
	<if test="type == 3">
		AND FLAG ='Y' AND SIGN_STATUS = 'O' 
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 완료 -->
	<if test="type == 4">
		AND FLAG = 'Y' AND SIGN_STATUS = 'C'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 반려 -->
	<if test="type == 5">
		AND FLAG = 'Y' AND SIGN_STATUS = 'R'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	<!-- 회수 -->
	<if test="type == 6">
		AND FLAG = 'N' AND SIGN_STATUS = 'D'
		GROUP BY S.SIGN_NO, SIGNUP_DATE, D_TYPE, SIGN_STATUS, FLAG, TITLE,
		S.MEMBER_NO, M.MEMBER_NAME
		ORDER BY SIGNUP_DATE DESC
	</if>
	
	</select>
	
	
	<!-- 참조된 결재 조회 -->
	<select id="selectSignReferList" parameterType="_int" resultMap="signDtoResultSet">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, RM.MEMBER_NO, RM.MEMBER_NAME
	FROM TB_SIGNREFER R
	JOIN TB_MEMBER RM ON (R.MEMBER_NO = RM.MEMBER_NO)
	JOIN TB_SIGN S ON (S.SIGN_NO = R.SIGN_NO)
	JOIN TB_MEMBER SM ON (S.MEMBER_NO = SM.MEMBER_NO)
	WHERE RM.MEMBER_NO=#{memberNo}
	</select>
	
	<!-- 해야할 결재 조회 -->
	<select id="selectDoSignList" parameterType="_int" resultMap="signDtoResultSet">
	SELECT S.SIGN_NO, SIGNUP_DATE, D_TYPE, RM.MEMBER_NO, RM.MEMBER_NAME
	FROM TB_SIGNLINE R
	JOIN TB_MEMBER RM ON (R.MEMBER_NO = RM.MEMBER_NO)
	JOIN TB_SIGN S ON (S.SIGN_NO = R.SIGN_NO)
	JOIN TB_MEMBER SM ON (S.MEMBER_NO = SM.MEMBER_NO)
	WHERE RM.MEMBER_NO=#{memberNo}
	</select>
	
	
	
	
	
	

	







</mapper>				 